{"version":3,"file":"static/js/main.4c4cb79f.js","mappings":"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","sources":["../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../external commonjs \"react\"","../external commonjs \"react-dom/client\"","../external commonjs \"openai\"","../external commonjs \"dotenv/config\"","services/TestChatResponse.js","hooks/useInterval.js","../external commonjs \"@heroicons/react/24/solid\"","../external commonjs \"react/jsx-runtime\"","components/Message.jsx","components/MainChat.jsx","App.js","index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"react\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"react-dom/client\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"openai\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"dotenv/config\");","import OpenAI from \"openai\";\nimport 'dotenv/config'\n\n// PROMPTS\nconst assigmentPrompt = \"You are a Human Interaction clone\"\nconst userPrompt = \"Create a list of 16 chat interactions \"\n\t\t\t\t\t+ \"these chat interactions should appear as if they are messages coming in from people watching a twitch stream online\"\n\t\t\t\t\t+ \" the topic of this twitch stream is a tech related stream.\"\n\t\t\t\t\t+ \"do not include any explanations, only provide a JSON response in the following format with no deviations:\" \n\t\t\t\t\t+ \"[{ username: string, chatMessage: string }]\"\n\n\n// REMEMBER TO BLUR THIS CODE IN VIDEO CAUSE I COULD NOT GET ENV WOKRING\nconst API_KEY = process.env.API_KEY || \"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\"\n\n\n// Create instance of OpenAI with api key\nconst openai = new OpenAI({\n\tapiKey:API_KEY,\n\tdangerouslyAllowBrowser: true\n});\n\n\n// Parse the GPT repspone and set it up as a JSON \nconst parseChatResponse = (gptResponse) => {\n\tlet jsonParsed = []\n\n\ttry {\n\t \tjsonParsed = JSON.parse(gptResponse);\n\t\tconsole.log(jsonParsed)\n\t} catch (err) {\n\t\tconsole.log(\"GPT DID NOT RESPONSE CORRECTLY\");\n\t}\n\n\treturn jsonParsed;\n\t\t\n}\n\n\n// The AI Function. \n\t// THIS PART PROBABLY SUCKS AND CAN BE BETTER.\nexport const AiChatResponse = async () => {\n\tif (!API_KEY) {\n\t\treturn [{}];\n\t}\n\t\n\tlet chatResponse = []\n\n\ttry {\n\t\tconst completion = await openai.chat.completions.create({\n\t\t\tmodel: \"gpt-3.5-turbo\",\n\t\t\tmessages: [\n\t\t\t\t{ role: \"system\", content: assigmentPrompt},\n\t\t\t\t{ role: \"user\" , content: userPrompt}\n\t\t\t]\n\t\t})\n\n\t\tchatResponse = parseChatResponse(completion.choices[0].message.content)\n\t\n\t} catch (err) {\n\t\tconsole.log(err);\n\t\tconsole.log(\"Unable to get response from GPT\");\n\t}\n\n\n\treturn chatResponse \n}\n","import React, {useState, useEffect, useRef } from \"react\";\n\nfunction useInterval(callback, delay) {\n\t\n\tconst savedCallback = useRef();\n\n\tuseEffect(() => {\n\t\tsavedCallback.current = callback;\n\t},[callback]);\n\n\tuseEffect(() => {\n\t\tfunction tick() {\n\t\t\tsavedCallback.current();\n\t\t}\n\n\t\tif (delay !== null) {\n\t\t\tlet id = setInterval(tick, delay);\n\t\t\treturn (() => clearInterval(id));\n\t\t}\n\t},[delay]);\n}\n\nexport default useInterval;\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@heroicons/react/24/solid\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"react/jsx-runtime\");","import React, { useEffect, useState } from \"react\";\nimport {BugAntIcon, CheckBadgeIcon} from '@heroicons/react/24/solid'\n\n//Variation of the Regulat message with a different Border and background highlighting\nconst BorderMessage = (props) => {\n\n\treturn (\n\t\t<div key={props.key} className=\"text-sm text-white border-red-500 bg-red-300/35 flex flex-row rounded-md\">\n\t\t\t{props.bugAnt ? <BugAntIcon className=\"h-3 w-3 text-red-400\" /> : null }\n\t\t\t{props.checkBadge ? <CheckBadgeIcon className=\"h-3 w-3 text-blue-400\" /> : null }\n\t\t\t<span className=\"font-bold\">{props.username}: </span>\n\t\t\t{props.chatMessage}\n\t\t</div>\n\t)\n}\nconst FirstTimeUserMessage = (props) => {\n\n\treturn (\n\t\t<div key={props.key} className=\"text-sm text-white flex flex-row\">\n\t\t\t{props.bugAnt ? <BugAntIcon className=\"h-3 w-3 text-red-400\" /> : null }\n\t\t\t{props.checkBadge ? <CheckBadgeIcon className=\"h-3 w-3 text-blue-400\" /> : null }\n\t\t\t<span className=\"font-extrabold text-red-300\"> FIRST TIME USER </span>\n\t\t\t<span className=\"font-bold\"> {props.username}: </span>\n\t\t\t{props.chatMessage}\n\t\t</div>\n\t)\n}\n\nconst Messages = (props) => {\n\n\tconst [borderColor, setBorderColor] = useState(false);\n\tconst [bugAnt, setBugAnt] = useState(false);\n\tconst [checkBadge, setCheckBadge] = useState(false);\n\tconst [firstTimeUser, setDisplayFirstTimeUser] = useState(false);\n\n\tconst Display = () => {\n\t\tsetBorderColor(Math.random() > .8)\n\t\tsetBugAnt(Math.random() > .6)\n\t\tsetCheckBadge(Math.random() > .4)\n\t\tsetDisplayFirstTimeUser(Math.random() > .8)\n\t}\n\n\tuseEffect(() => {\n\t\tDisplay();\n\t},[])\n\n\treturn (\n\t\t<div className=\"mt-2\">\n\t\t{ borderColor ? <BorderMessage \n\t\t\t\t\t\t\tkey={props.key} \n\t\t\t\t\t\t\tchatMessage={props.chatMessage.chatMessage} \n\t\t\t\t\t\t\tusername={props.chatMessage.username} \n\t\t\t\t\t\t\tbugAnt={bugAnt} \n\t\t\t\t\t\t\tcheckBadge={checkBadge} /> \n\t\t\t: null \n\t\t}\n\t\t{ firstTimeUser ? <FirstTimeUserMessage \n\t\t\t\t\t\t\tkey={props.key} \n\t\t\t\t\t\t\tchatMessage={props.chatMessage.chatMessage} \n\t\t\t\t\t\t\tusername={props.chatMessage.username} \n\t\t\t\t\t\t\tbugAnt={bugAnt} \n\t\t\t\t\t\t\tcheckBadge={checkBadge} /> \n\t\t\t: null \n\t\t}\n\t\t{ !borderColor && !firstTimeUser ? \n\t\t\t\t<div key={props.key} className=\"text-sm text-white flex flex-row\">\n\t\t\t\t{bugAnt ? <BugAntIcon className=\"h-3 w-3 text-red-400\" /> : null }\n\t\t\t\t{checkBadge ? <CheckBadgeIcon className=\"h-3 w-3 text-blue-400\" /> : null }\n\t\t\t\t<span className=\"font-bold\">{props.chatMessage.username}: </span>\n\t\t\t\t{props.chatMessage.chatMessage}\n\t\t\t\t</div> : null }\n\t\t</div>\n\t)\n}\n\nexport default Messages;\n","import React, { useState } from \"react\";\nimport { AiChatResponse } from \"../services/TestChatResponse\"\nimport  useInterval  from \"../hooks/useInterval\"\nimport Messages from \"./Message\";\n\nfunction MainChat () {\n\n\tconst DELAY = 10000;\t\t\t\t\t\t\t\t// Refill messages every 20 seconds\n\tlet RANDOMDELAY = Math.random() * 5000;\t\t\t\t// Display a new messages at a random interval\n\tconst [chatBank, setChatBank] = useState([])\t\t// Bank of chat display\n\tconst [chatDisplay, setChatDisplay] = useState([])\t// The Display of items that get displayed to the user\t\n\t\n\n\t// This use Interval will consume the chat bank\n\tuseInterval(() => {\n\t\tif (chatBank.length > 0) {\n\t\t\tsetChatDisplay((c) => c.concat(chatBank[0]))\n\t\t\tconsole.log(chatBank)\n\t\t\tsetChatBank((c) => {\n\t\t\t\tc.shift()\n\t\t\t\treturn c;\n\t\t\t})\n\t\t}\n\t\tRANDOMDELAY = Math.random() * 10000;\n\t},RANDOMDELAY)\n\t\n\n\t// This useInterval will refill the chat bank. \n \tuseInterval(async () => {\n\t\tconst incomingMessagesQueue = await AiChatResponse();\t\t\t\t\n\t\tsetChatBank((c) => [...c, ...incomingMessagesQueue]);\n\t},DELAY)\n\t\n\treturn (\n\t\t<div className='text-white mt-5 mb-5 p-2'>\n\t\t{chatDisplay.map((chatMessage, key) => {\n\t\t\treturn (\n\t\t\t\t<Messages key={key} chatMessage={chatMessage} />\n\t\t\t)\n\t\t})}\n\t\t</div> \n\t)\n}\n\nexport default MainChat;\n","import './App.css';\nimport MainChat from \"./components/MainChat.jsx\"\n\nfunction App() {\n  return (\n\t  <div className=\"flex flex-col bg-black h-screen w-screen\">\n\t\t<div className='font-extrabold text-white text-3xl text-center align-middle'>\n\t  \t\tStream Chat\n\t  \t</div>\n\t  \t<div className='flex flex-col-reverse overflow-hidden'>\n\t\t\t<MainChat />\t\n\t  \t</div>\n\t  </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","require","API_KEY","process","openai","OpenAI","apiKey","dangerouslyAllowBrowser","AiChatResponse","async","chatResponse","gptResponse","jsonParsed","JSON","parse","console","log","err","parseChatResponse","chat","completions","create","model","messages","role","content","choices","message","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","BorderMessage","props","_jsxs","className","children","bugAnt","_jsx","BugAntIcon","checkBadge","CheckBadgeIcon","username","chatMessage","FirstTimeUserMessage","borderColor","setBorderColor","useState","setBugAnt","setCheckBadge","firstTimeUser","setDisplayFirstTimeUser","Math","random","RANDOMDELAY","chatBank","setChatBank","chatDisplay","setChatDisplay","useInterval","length","c","concat","shift","incomingMessagesQueue","map","Messages","MainChat","ReactDOM","document","getElementById","render","React","App"],"sourceRoot":""}